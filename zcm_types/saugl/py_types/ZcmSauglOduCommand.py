"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class ZcmSauglOduCommand(object):
    __slots__ = ["is_signal", "is_brake"]

    def __init__(self):
        self.is_signal = False
        self.is_brake = False

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmSauglOduCommand._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bb", self.is_signal, self.is_brake))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmSauglOduCommand._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmSauglOduCommand._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmSauglOduCommand()
        self.is_signal = bool(struct.unpack('b', buf.read(1))[0])
        self.is_brake = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmSauglOduCommand in parents: return 0
        tmphash = (0x32cab9544265f203) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmSauglOduCommand._packed_fingerprint is None:
            ZcmSauglOduCommand._packed_fingerprint = struct.pack(">Q", ZcmSauglOduCommand._get_hash_recursive([]))
        return ZcmSauglOduCommand._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

