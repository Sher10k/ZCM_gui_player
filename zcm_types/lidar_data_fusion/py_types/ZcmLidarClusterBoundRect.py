"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class ZcmLidarClusterBoundRect(object):
    __slots__ = ["top_left_x", "top_left_y", "top_right_x", "top_right_y", "bottom_left_x", "bottom_left_y", "bottom_right_x", "bottom_right_y", "center_x", "center_y", "width", "height", "angle"]

    def __init__(self):
        self.top_left_x = 0.0
        self.top_left_y = 0.0
        self.top_right_x = 0.0
        self.top_right_y = 0.0
        self.bottom_left_x = 0.0
        self.bottom_left_y = 0.0
        self.bottom_right_x = 0.0
        self.bottom_right_y = 0.0
        self.center_x = 0.0
        self.center_y = 0.0
        self.width = 0.0
        self.height = 0.0
        self.angle = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmLidarClusterBoundRect._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">fffffffffffff", self.top_left_x, self.top_left_y, self.top_right_x, self.top_right_y, self.bottom_left_x, self.bottom_left_y, self.bottom_right_x, self.bottom_right_y, self.center_x, self.center_y, self.width, self.height, self.angle))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmLidarClusterBoundRect._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmLidarClusterBoundRect._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmLidarClusterBoundRect()
        self.top_left_x, self.top_left_y, self.top_right_x, self.top_right_y, self.bottom_left_x, self.bottom_left_y, self.bottom_right_x, self.bottom_right_y, self.center_x, self.center_y, self.width, self.height, self.angle = struct.unpack(">fffffffffffff", buf.read(52))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmLidarClusterBoundRect in parents: return 0
        tmphash = (0x59b052c9a88b3dda) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmLidarClusterBoundRect._packed_fingerprint is None:
            ZcmLidarClusterBoundRect._packed_fingerprint = struct.pack(">Q", ZcmLidarClusterBoundRect._get_hash_recursive([]))
        return ZcmLidarClusterBoundRect._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

