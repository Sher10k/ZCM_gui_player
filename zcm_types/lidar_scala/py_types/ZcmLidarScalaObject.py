"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

from ZcmLidarScalaFilteredObjectAttributes import ZcmLidarScalaFilteredObjectAttributes

from ZcmLidarScalaUnfilteredObjectAttributes import ZcmLidarScalaUnfilteredObjectAttributes

class ZcmLidarScalaObject(object):
    __slots__ = ["objectId", "unfilteredAttrib", "filteredAttrib"]

    def __init__(self):
        self.objectId = 0
        self.unfilteredAttrib = ZcmLidarScalaUnfilteredObjectAttributes()
        self.filteredAttrib = ZcmLidarScalaFilteredObjectAttributes()

    def encode(self):
        buf = BytesIO()
        buf.write(ZcmLidarScalaObject._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.objectId))
        assert self.unfilteredAttrib._get_packed_fingerprint() == ZcmLidarScalaUnfilteredObjectAttributes._get_packed_fingerprint()
        self.unfilteredAttrib._encode_one(buf)
        assert self.filteredAttrib._get_packed_fingerprint() == ZcmLidarScalaFilteredObjectAttributes._get_packed_fingerprint()
        self.filteredAttrib._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ZcmLidarScalaObject._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ZcmLidarScalaObject._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ZcmLidarScalaObject()
        self.objectId = struct.unpack(">q", buf.read(8))[0]
        self.unfilteredAttrib = ZcmLidarScalaUnfilteredObjectAttributes._decode_one(buf)
        self.filteredAttrib = ZcmLidarScalaFilteredObjectAttributes._decode_one(buf)
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ZcmLidarScalaObject in parents: return 0
        newparents = parents + [ZcmLidarScalaObject]
        tmphash = (0x7efedd31653f42d9+ ZcmLidarScalaUnfilteredObjectAttributes._get_hash_recursive(newparents)+ ZcmLidarScalaFilteredObjectAttributes._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ZcmLidarScalaObject._packed_fingerprint is None:
            ZcmLidarScalaObject._packed_fingerprint = struct.pack(">Q", ZcmLidarScalaObject._get_hash_recursive([]))
        return ZcmLidarScalaObject._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

